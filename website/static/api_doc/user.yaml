components:
  requestBodies:
    login:
      content:
        'application/json':
          schema:
            type: object
            properties:
              strategy:
                type: string
                required: true
                enum:
                  - local
                  - facebook-token
                  - google-token
                  - apple-idtoken
              access_token:
                description: accesstoken của bên thứ 3
                type: string
              username:
                description: Tên đăng nhập của người dùng
                type: string
              password:
                description: Mật khẩu tài khoản
                type: string
              exp:
                description: Thời gian hiệu lực
                type: string
                examples:
                  - 30m
                  - 24h
                  - 2d
          examples:
            local:
              value: {"strategy":"local","username":"test","password":"12345678","exp":"30d"}
            google-token:
              value: {"strategy":"google-token","access_token":"google access token","exp":"30d"}

paths:
  users_authentication:
    post:
      description: Lấy access token cho user
      tags:
        - Users
      security: []
      parameters:
        - in: query
          name: _v
          required: true
          allowEmptyValue: false
          schema:
            type: number
            enum:
              - 1
      requestBody:
        $ref: 'user.yaml#/components/requestBodies/login'
      responses:
        default:
          $ref: 'base.yaml#/responses/token'

  users_userId:
    get:
      description: Lấy thông tin user
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          allowEmptyValue: false
          schema:
            type: string
            example: "5b4cb84bada24b0007fac90b"
      responses:
        default:
          content:
            'application/json':
              schema :
                $ref: 'user_schema.yaml#/user'

    patch:
      description: Cập nhật thông tin user
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          allowEmptyValue: false
          schema:
            type: string
            example: "5b4cb84bada24b0007fac90b"
      requestBody:
        content:
          'application/json':
            schema:
              $ref: 'user_schema.yaml#/user'
            examples:
              name:
                summary: Đổi tên hiển thị
                value: {"name":"haha"}
              password:
                summary: Thay đổi mật khẩu
                value: {"password":"123456a@"}
      responses:
        default:
          content:
            'application/json':
              schema :
                $ref: 'user_schema.yaml#/user'

  users:
    get:
      description: Lấy thông tin nhiều user
      externalDocs:
        description: "Xem thêm về truy vấn lọc tìm kiếm"
        url: "https://docs.feathersjs.com/api/databases/querying.html"
      tags:
        - Users
      parameters:
        - $ref: 'base.yaml#/parameters/limit'
        - $ref: 'base.yaml#/parameters/skip'
        - $ref: 'base.yaml#/parameters/sort'
        - in: query
          name: _id
          style: deepObject
          explode: true
          allowEmptyValue: true
          schema:
            type: string
          examples:
            empty:
              value:
            one_id:
              description: lọc 1 user Id
              value: "5b4cb84bada24b0007fac90b"
      responses:
        default:
          content:
            'application/json':
              schema :
                type: object
                allOf:
                  - $ref: 'base.yaml#/schemas/paging_response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: 'user_schema.yaml#/user'
