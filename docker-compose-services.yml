version: '3.4'
services:

  users-service:
    image: makipos/users-service:${USER_VERSION}
    container_name: makiposiot-users-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /etc/machine-id:/etc/machine-id
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id
      - /media/Programs/Programs_data/makiposiot/users_service/logs:/media/data/logs
      - ${CONFIG_PATH}/users-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.user.frontend.rule=PathPrefix:/users,/commercial-validation"
      - "traefik.root.frontend.rule=PathPrefixStrip:/users-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1000M
      labels:
        - "traefik.port=3030"
        - "traefik.user.frontend.rule=PathPrefix:/users,/commercial-validation"
        - "traefik.root.frontend.rule=PathPrefixStrip:/users-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"
    # depends_on:
    #   - redis
    #   - mongodb
    #   - emqtt

  devices-service:
    image: makipos/devices-service:${DEVICE_VERSION}
    container_name: makiposiot-devices-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/devices_service:/media/data
      - /media/Programs/Programs_data/makiposiot/devices_service/logs:/media/data/logs
      - ${CONFIG_PATH}/devices-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.device.frontend.rule=PathPrefix:/devices"
      - "traefik.root.frontend.rule=PathPrefixStrip:/devices-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1024M
      labels:
        - "traefik.port=3030"
        - "traefik.device.frontend.rule=PathPrefix:/devices"
        - "traefik.root.frontend.rule=PathPrefixStrip:/devices-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"
      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - redis
    #   - mongodb
    #   - emqtt

  relations-service:
    image: makipos/relations-service:${RELATION_VERSION}
    container_name: makiposiot-relations-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/relations_service/logs:/media/data/logs
      - ${CONFIG_PATH}/relations-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.relation.frontend.rule=PathPrefix:/relations"
      - "traefik.root.frontend.rule=PathPrefixStrip:/relations-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 600M
      labels:
        - "traefik.port=3030"
        - "traefik.relation.frontend.rule=PathPrefix:/relations"
        - "traefik.root.frontend.rule=PathPrefixStrip:/relations-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

  automatic-service:
    image: makipos/automatic-service:${AUTOMATIC_VERSION}
    container_name: makiposiot-automatic-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/automatic_service/logs:/media/data/logs
      - ${CONFIG_PATH}/automatic-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.automatic.frontend.rule=PathPrefix:/automatic"
      - "traefik.root.frontend.rule=PathPrefixStrip:/automatic-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1024M
      labels:
        - "traefik.port=3030"
        - "traefik.automatic.frontend.rule=PathPrefix:/automatic"
        - "traefik.root.frontend.rule=PathPrefixStrip:/automatic-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
    # depends_on:
    #   - users-service
    #   - devices-service
      # - emqtt
      # - redis
      # - mongodb

  update-service:
    image: makipos/update-service:${UPDATE_VERSION}
    container_name: makiposiot-update-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/update_service:/media/data
      - /media/Programs/Programs_data/makiposiot/update_service/logs:/media/data/logs
      - ${CONFIG_PATH}/update-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.update.frontend.rule=PathPrefix:/update"
      - "traefik.root.frontend.rule=PathPrefixStrip:/update-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 200M
      labels:
        - "traefik.port=3030"
        - "traefik.update.frontend.rule=PathPrefix:/update"
        - "traefik.root.frontend.rule=PathPrefixStrip:/update-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

  files-service:
    image: makipos/files-service:${FILES_VERSION}
    container_name: makiposiot-files-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/files_service:/media/data
      - /media/Programs/Programs_data/makiposiot/files_service/logs:/media/data/logs
      - ${CONFIG_PATH}/files-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.files.frontend.rule=PathPrefix:/files,/devices-image-static"
      - "traefik.root.frontend.rule=PathPrefixStrip:/files-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 200M
      labels:
        - "traefik.port=3030"
        - "traefik.files.frontend.rule=PathPrefix:/files,/devices-image-static"
        - "traefik.root.frontend.rule=PathPrefixStrip:/files-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

networks:
  vpc:
    external:
      name: makiposiot-internal
