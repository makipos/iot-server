version: '3.4'
services:

  users-service:
    image: makipos/users-service:${USER_VERSION}
    container_name: makiposiot-users-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /etc/machine-id:/etc/machine-id
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id
      - /media/Programs/Programs_data/makiposiot/users_service/logs:/media/data/logs
      - ${CONFIG_PATH}/users-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.user.frontend.rule=PathPrefix:/users,/commercial-validation,/languages"
      - "traefik.root.frontend.rule=PathPrefixStrip:/users-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"

      - "traefik.http.services.user.loadbalancer.server.port=3030"
      - "traefik.http.routers.user.rule=PathPrefix(`/users`,`/commercial-validation`,`/mqtt/auth`,`/languages`)"
      - "traefik.http.routers.userroot.rule=PathPrefix(`/users-service`)"
      - "traefik.http.routers.userroot.middlewares=userstripprefix"
      - "traefik.http.middlewares.userstripprefix.stripprefix.prefixes=/users-service"
      - "traefik.http.routers.userroot.priority=1000"
      - "traefik.http.services.user.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.user.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1000M
      labels:
        - "traefik.port=3030"
        - "traefik.user.frontend.rule=PathPrefix:/users,/commercial-validation,/languages"
        - "traefik.root.frontend.rule=PathPrefixStrip:/users-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"

        - "traefik.http.services.user.loadbalancer.server.port=3030"
        - "traefik.http.routers.user.rule=PathPrefix(`/users`,`/commercial-validation`,`/mqtt/auth`,`/languages`)"
        - "traefik.http.routers.userroot.rule=PathPrefix(`/users-service`)"
        - "traefik.http.routers.userroot.middlewares=userstripprefix"
        - "traefik.http.middlewares.userstripprefix.stripprefix.prefixes=/users-service"
        - "traefik.http.routers.userroot.priority=1000"
        - "traefik.http.services.user.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.user.loadbalancer.sticky.cookie=true"

    # depends_on:
    #   - redis
    #   - mongodb
    #   - emqtt

  devices-service:
    image: makipos/devices-service:${DEVICE_VERSION}
    container_name: makiposiot-devices-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/devices_service:/media/data
      - /media/Programs/Programs_data/makiposiot/devices_service/logs:/media/data/logs
      - ${CONFIG_PATH}/devices-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.device.frontend.rule=PathPrefix:/devices"
      - "traefik.root.frontend.rule=PathPrefixStrip:/devices-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"

      - "traefik.http.services.device.loadbalancer.server.port=3030"
      - "traefik.http.routers.device.rule=PathPrefix(`/devices`)"
      - "traefik.http.routers.deviceroot.rule=PathPrefix(`/devices-service`)"
      - "traefik.http.routers.deviceroot.middlewares=devicestripprefix"
      - "traefik.http.middlewares.devicestripprefix.stripprefix.prefixes=/devices-service"
      - "traefik.http.routers.deviceroot.priority=1000"
      - "traefik.http.services.device.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.device.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1024M
      labels:
        - "traefik.port=3030"
        - "traefik.device.frontend.rule=PathPrefix:/devices"
        - "traefik.root.frontend.rule=PathPrefixStrip:/devices-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "MKPS_server_address=http://${SERVICE_DOMAIN}:3028"

        - "traefik.http.services.device.loadbalancer.server.port=3030"
        - "traefik.http.routers.device.rule=PathPrefix(`/devices`)"
        - "traefik.http.routers.deviceroot.rule=PathPrefix(`/devices-service`)"
        - "traefik.http.routers.deviceroot.middlewares=devicestripprefix"
        - "traefik.http.middlewares.devicestripprefix.stripprefix.prefixes=/devices-service"
        - "traefik.http.routers.deviceroot.priority=1000"
        - "traefik.http.services.device.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.device.loadbalancer.sticky.cookie=true"

      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - redis
    #   - mongodb
    #   - emqtt

  relations-service:
    image: makipos/relations-service:${RELATION_VERSION}
    container_name: makiposiot-relations-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/relations_service/logs:/media/data/logs
      - ${CONFIG_PATH}/relations-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.relation.frontend.rule=PathPrefix:/relations"
      - "traefik.root.frontend.rule=PathPrefixStrip:/relations-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"

      - "traefik.http.services.relation.loadbalancer.server.port=3030"
      - "traefik.http.routers.relation.rule=PathPrefix(`/relations`)"
      - "traefik.http.routers.relationroot.rule=PathPrefix(`/relations-service`)"
      - "traefik.http.routers.relationroot.middlewares=relationstripprefix"
      - "traefik.http.middlewares.relationstripprefix.stripprefix.prefixes=/relations-service"
      - "traefik.http.routers.relationroot.priority=1000"
      - "traefik.http.services.relation.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.relation.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 600M
      labels:
        - "traefik.port=3030"
        - "traefik.relation.frontend.rule=PathPrefix:/relations"
        - "traefik.root.frontend.rule=PathPrefixStrip:/relations-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"

        - "traefik.http.services.relation.loadbalancer.server.port=3030"
        - "traefik.http.routers.relation.rule=PathPrefix(`/relations`)"
        - "traefik.http.routers.relationroot.rule=PathPrefix(`/relations-service`)"
        - "traefik.http.routers.relationroot.middlewares=relationstripprefix"
        - "traefik.http.middlewares.relationstripprefix.stripprefix.prefixes=/relations-service"
        - "traefik.http.routers.relationroot.priority=1000"
        - "traefik.http.services.relation.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.relation.loadbalancer.sticky.cookie=true"
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

  automatic-service:
    image: makipos/automatic-service:${AUTOMATIC_VERSION}
    container_name: makiposiot-automatic-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/automatic_service/logs:/media/data/logs
      - ${CONFIG_PATH}/automatic-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.automatic.frontend.rule=PathPrefix:/automatic"
      - "traefik.root.frontend.rule=PathPrefixStrip:/automatic-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"

      - "traefik.http.services.automatic.loadbalancer.server.port=3030"
      - "traefik.http.routers.automatic.rule=PathPrefix(`/automatic`)"
      - "traefik.http.routers.automaticroot.rule=PathPrefix(`/automatic-service`)"
      - "traefik.http.routers.automaticroot.middlewares=automaticstripprefix"
      - "traefik.http.middlewares.automaticstripprefix.stripprefix.prefixes=/automatic-service"
      - "traefik.http.routers.automaticroot.priority=1000"
      - "traefik.http.services.automatic.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.automatic.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1024M
      labels:
        - "traefik.port=3030"
        - "traefik.automatic.frontend.rule=PathPrefix:/automatic"
        - "traefik.root.frontend.rule=PathPrefixStrip:/automatic-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"

        - "traefik.http.services.automatic.loadbalancer.server.port=3030"
        - "traefik.http.routers.automatic.rule=PathPrefix(`/automatic`)"
        - "traefik.http.routers.automaticroot.rule=PathPrefix(`/automatic-service`)"
        - "traefik.http.routers.automaticroot.middlewares=automaticstripprefix"
        - "traefik.http.middlewares.automaticstripprefix.stripprefix.prefixes=/automatic-service"
        - "traefik.http.routers.automaticroot.priority=1000"
        - "traefik.http.services.automatic.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.automatic.loadbalancer.sticky.cookie=true"

    # depends_on:
    #   - users-service
    #   - devices-service
      # - emqtt
      # - redis
      # - mongodb

  update-service:
    image: makipos/update-service:${UPDATE_VERSION}
    container_name: makiposiot-update-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/update_service:/media/data
      - /media/Programs/Programs_data/makiposiot/update_service/logs:/media/data/logs
      - ${CONFIG_PATH}/update-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.update.frontend.rule=PathPrefix:/update"
      - "traefik.root.frontend.rule=PathPrefixStrip:/update-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"

      - "traefik.http.services.update.loadbalancer.server.port=3030"
      - "traefik.http.routers.update.rule=PathPrefix(`/update`)"
      - "traefik.http.routers.updateroot.rule=PathPrefix(`/update-service`)"
      - "traefik.http.routers.updateroot.middlewares=updatestripprefix"
      - "traefik.http.middlewares.updatestripprefix.stripprefix.prefixes=/update-service"
      - "traefik.http.routers.updateroot.priority=1000"
      - "traefik.http.services.update.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.update.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 200M
      labels:
        - "traefik.port=3030"
        - "traefik.update.frontend.rule=PathPrefix:/update"
        - "traefik.root.frontend.rule=PathPrefixStrip:/update-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"

        - "traefik.http.services.update.loadbalancer.server.port=3030"
        - "traefik.http.routers.update.rule=PathPrefix(`/update`)"
        - "traefik.http.routers.updateroot.rule=PathPrefix(`/update-service`)"
        - "traefik.http.routers.updateroot.middlewares=updatestripprefix"
        - "traefik.http.middlewares.updatestripprefix.stripprefix.prefixes=/update-service"
        - "traefik.http.routers.updateroot.priority=1000"
        - "traefik.http.services.update.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.update.loadbalancer.sticky.cookie=true"

      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

  files-service:
    image: makipos/files-service:${FILES_VERSION}
    container_name: makiposiot-files-service
    restart: always
    networks:
      - vpc
    expose:
      - "3030"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /media/Programs/Programs_data/makiposiot/files_service:/media/data
      - /media/Programs/Programs_data/makiposiot/files_service/logs:/media/data/logs
      - ${CONFIG_PATH}/files-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.files.frontend.rule=PathPrefix:/files,/devices-image-static"
      - "traefik.root.frontend.rule=PathPrefixStrip:/files-service"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"

      - "traefik.http.services.files.loadbalancer.server.port=3030"
      - "traefik.http.routers.files.rule=PathPrefix(`/files`,`/devices-image-static`)"
      - "traefik.http.routers.filesroot.rule=PathPrefix(`/files-service`)"
      - "traefik.http.routers.filesroot.middlewares=filesstripprefix"
      - "traefik.http.middlewares.filesstripprefix.stripprefix.prefixes=/files-service"
      - "traefik.http.routers.filesroot.priority=1000"
      - "traefik.http.services.files.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.files.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 200M
      labels:
        - "traefik.port=3030"
        - "traefik.files.frontend.rule=PathPrefix:/files,/devices-image-static"
        - "traefik.root.frontend.rule=PathPrefixStrip:/files-service"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"

        - "traefik.http.services.files.loadbalancer.server.port=3030"
        - "traefik.http.routers.files.rule=PathPrefix(`/files`,`/devices-image-static`)"
        - "traefik.http.routers.filesroot.rule=PathPrefix(`/files-service`)"
        - "traefik.http.routers.filesroot.middlewares=filesstripprefix"
        - "traefik.http.middlewares.filesstripprefix.stripprefix.prefixes=/files-service"
        - "traefik.http.routers.filesroot.priority=1000"
        - "traefik.http.services.files.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.files.loadbalancer.sticky.cookie=true"

      # placement:
      #   constraints:
      #     - node.hostname == ${STORE_NODE}
    # depends_on:
    #   - users-service
    #   - devices-service
      # - redis
      # - mongodb

  active-connection-service:
    image: makipos/active-connection-service:${ACTIVE_CONNECTION_VERSION}
    container_name: makiposiot-active-connection-service
    restart: always
    networks:
      - vpc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_PATH}/active-connection-service/config:/usr/src/app/config
    environment:
      - NODE_ENV=productionpkg
      - MKPS_authentication__secret=${MKP_authentication__secret}
      - MKPS_emqtt_server__password=${MKPS_SERVICE_PASS}
    healthcheck:
      test: curl -f http://localhost:3030/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 5s
    labels:
      - "traefik.port=3030"
      - "traefik.connection.frontend.rule=PathPrefix:/active-connection"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.loadbalancer.stickiness=true"

      - "traefik.http.services.active-connection.loadbalancer.server.port=3030"
      - "traefik.http.routers.active-connection.rule=PathPrefix(`/active-connection`)"
      - "traefik.http.routers.active-connectionroot.rule=PathPrefix(`/active-connection-service`)"
      - "traefik.http.routers.active-connectionroot.middlewares=active-connectionstripprefix"
      - "traefik.http.middlewares.active-connectionstripprefix.stripprefix.prefixes=/active-connection-service"
      - "traefik.http.routers.active-connectionroot.priority=1000"
      - "traefik.http.services.active-connection.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.active-connection.loadbalancer.sticky.cookie=true"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1024M
      labels:
        - "traefik.port=3030"
        - "traefik.connection.frontend.rule=PathPrefix:/active-connection"
        - "traefik.backend.healthcheck.path=/health"
        - "traefik.backend.loadbalancer.stickiness=true"

        - "traefik.http.services.active-connection.loadbalancer.server.port=3030"
        - "traefik.http.routers.active-connection.rule=PathPrefix(`/active-connection`)"
        - "traefik.http.routers.active-connectionroot.rule=PathPrefix(`/active-connection-service`)"
        - "traefik.http.routers.active-connectionroot.middlewares=active-connectionstripprefix"
        - "traefik.http.middlewares.active-connectionstripprefix.stripprefix.prefixes=/active-connection-service"
        - "traefik.http.routers.active-connectionroot.priority=1000"
        - "traefik.http.services.active-connection.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.active-connection.loadbalancer.sticky.cookie=true"
    depends_on:
      - devices-service

networks:
  vpc:
    external:
      name: makiposiot-internal
